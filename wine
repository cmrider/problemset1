> wine = read.csv("http://www.nd.edu/~mclark19/learn/data/goodwine.csv")
> summary(wine)
> install.packages("caret")
> library(caret)
> install.packages("corrplot")
> library(corrplot)
> install.packages("e1071")
> library(e1071)
> install.packages("pROC")
> library(pROC)

## Feature Selection & The Data Partition
> corrplot(cor(wine[, -c(13, 15)]), method="number", tl.cex=0.5)
![winecorrplot](https://cloud.githubusercontent.com/assets/10501253/6317103/fa28de1c-ba0f-11e4-9395-5d1a451e1036.png)
__________

> set.seed(1234)
> trainIndices=createDataPartition(wine$good, p=0.8, list=F)
> wanted =!colnames(wine) %in% c("free.sulfur.dioxide", "density", "quality", "color", "white")
> wine_train=wine[trainIndices, wanted]
> wine_test=wine[-trainIndices, wanted]
> wine_trainplot=predict(preProcess(wine_train[,-10], method="range"), wine_train[,-10])
> featurePlot(wine_trainplot, wine_train$good, "box")
![winecaret](https://cloud.githubusercontent.com/assets/10501253/6317100/e32d491e-ba0f-11e4-85fd-f4814a28f554.png)
__________

## k-nearest Neighbors
> set.seed(1234)
> cv_opts=trainControl(method="cv", number=10)
> knn_opts=data.frame(.k=c(seq(3,11,2), 25, 51, 101))
> results_knn=train(good~., data=wine_train, method="knn", preProcess="range", trControl=cv_opts, tuneGrid=knn_opts)
> results_knn
![knn](https://cloud.githubusercontent.com/assets/10501253/6317147/1b409eda-ba12-11e4-9be6-68df19c3d2bc.png)
__________

> preds_knn=predict(results_knn, wine_test[,-10])
> confusionMatrix(preds_knn, wine_test[,10], positive='Good')
![confusionmatrix](https://cloud.githubusercontent.com/assets/10501253/6317146/ef6079ca-ba11-11e4-9a71-91a79b687455.png)
__________

> dotPlot(varImp(results_knn))
![winedotplot](https://cloud.githubusercontent.com/assets/10501253/6317095/acfb54c6-ba0f-11e4-9a45-557ee63dcb9b.png)
